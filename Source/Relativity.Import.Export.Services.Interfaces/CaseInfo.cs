//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
namespace Relativity.Import.Export.Services
{
	using System;

	[Serializable]
	public class CaseInfo
	{
		private string documentPath;

		public int ArtifactID { get; set; }

		public bool AsImportAllowed { get; set; }

		public string DownloadHandlerURL { get; set; }

		public bool EnableDataGrid { get; set; }

		public bool ExportAllowed { get; set; }

		public int MatterArtifactID { get; set; }

		public string Name { get; set; }

		public int RootArtifactID { get; set; }

		public int RootFolderID { get; set; }

		public int StatusCodeArtifactID { get; set; }

		public string DocumentPath
		{
			get
			{
				return this.documentPath;
			}

			set
			{
				this.documentPath = value;
				if (this.documentPath != null && 
				    this.documentPath.LastIndexOf('\\') != this.documentPath.Length - 1)
				{
					this.documentPath += "\\";
				}
			}
		}

		public CaseInfo()
		{
		}
		public CaseInfo(System.Data.DataRow row)
		{
			if (row == null)
			{
				throw new ArgumentNullException(nameof(row));
			}

			this.ArtifactID = System.Convert.ToInt32(row["ArtifactID"]);
			this.MatterArtifactID = System.Convert.ToInt32(row["MatterArtifactID"]);
			this.Name = System.Convert.ToString(row["Name"]);
			this.RootArtifactID = System.Convert.ToInt32(row["RootArtifactID"]);
			this.RootFolderID = System.Convert.ToInt32(row["RootFolderID"]);
			this.StatusCodeArtifactID = System.Convert.ToInt32(row["StatusCodeArtifactID"]);
			this.EnableDataGrid = System.Convert.ToBoolean(row["EnableDataGrid"]);
			this.DownloadHandlerURL = System.Convert.ToString(row["DownloadHandlerApplicationPath"]) + "/";
			this.DocumentPath = System.Convert.ToString(row["DefaultFileLocationName"]);
		}
	}
}
