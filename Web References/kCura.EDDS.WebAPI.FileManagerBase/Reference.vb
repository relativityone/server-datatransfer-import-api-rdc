'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.239
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
'
Namespace kCura.EDDS.WebAPI.FileManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FileManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class FileManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RetrieveByProductionArtifactIDForProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReturnFileGuidsForOriginalImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateProductionImagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateNativesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHeightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWidthOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteImagesByGuidForDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRotationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRotationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveNativesFileSizeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileByGuidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTotalImageCountByArtifactIDsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRotationForAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/RelativityWebApi/FileManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RetrieveByProductionArtifactIDForProductionCompleted As RetrieveByProductionArtifactIDForProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompleted As RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEventHandler
        
        '''<remarks/>
        Public Event ReturnFileGuidsForOriginalImagesCompleted As ReturnFileGuidsForOriginalImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCompleted As CreateCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateImagesCompleted As CreateImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateProductionImagesCompleted As CreateProductionImagesCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateNativesCompleted As CreateNativesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHeightCompleted As GetHeightCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWidthCompleted As GetWidthCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteImagesByGuidForDocumentCompleted As DeleteImagesByGuidForDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteCompleted As DeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRotationCompleted As GetRotationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRotationCompleted As SetRotationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFullTextGuidsByDocumentArtifactIdAndTypeCompleted As GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveNativesFileSizeCompleted As RetrieveNativesFileSizeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileByGuidCompleted As GetFileByGuidCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTotalImageCountByArtifactIDsCompleted As GetTotalImageCountByArtifactIDsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRotationForAllCompleted As SetRotationForAllCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RetrieveByProductionArtifactIDForProduction"& _ 
            "", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveByProductionArtifactIDForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveByProductionArtifactIDForProduction", New Object() {caseContextArtifactID, productionArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveByProductionArtifactIDForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveByProductionArtifactIDForProduction", New Object() {caseContextArtifactID, productionArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveByProductionArtifactIDForProduction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveByProductionArtifactIDForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer)
            Me.RetrieveByProductionArtifactIDForProductionAsync(caseContextArtifactID, productionArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveByProductionArtifactIDForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveByProductionArtifactIDForProductionOperationCompleted Is Nothing) Then
                Me.RetrieveByProductionArtifactIDForProductionOperationCompleted = AddressOf Me.OnRetrieveByProductionArtifactIDForProductionOperationCompleted
            End If
            Me.InvokeAsync("RetrieveByProductionArtifactIDForProduction", New Object() {caseContextArtifactID, productionArtifactID}, Me.RetrieveByProductionArtifactIDForProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveByProductionArtifactIDForProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveByProductionArtifactIDForProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveByProductionArtifactIDForProductionCompleted(Me, New RetrieveByProductionArtifactIDForProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RetrieveFileGuidsByDocumentArtifactIDAndPro"& _ 
            "ductionArtifactID", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal productionArtifactID As Integer) As String()
            Dim results() As Object = Me.Invoke("RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID", New Object() {caseContextArtifactID, documentArtifactID, productionArtifactID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID", New Object() {caseContextArtifactID, documentArtifactID, productionArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal productionArtifactID As Integer)
            Me.RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDAsync(caseContextArtifactID, documentArtifactID, productionArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted Is Nothing) Then
                Me.RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted = AddressOf Me.OnRetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted
            End If
            Me.InvokeAsync("RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactID", New Object() {caseContextArtifactID, documentArtifactID, productionArtifactID}, Me.RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompleted(Me, New RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/ReturnFileGuidsForOriginalImages", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReturnFileGuidsForOriginalImages(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer) As String()
            Dim results() As Object = Me.Invoke("ReturnFileGuidsForOriginalImages", New Object() {caseContextArtifactID, documentArtifactID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginReturnFileGuidsForOriginalImages(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReturnFileGuidsForOriginalImages", New Object() {caseContextArtifactID, documentArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReturnFileGuidsForOriginalImages(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReturnFileGuidsForOriginalImagesAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer)
            Me.ReturnFileGuidsForOriginalImagesAsync(caseContextArtifactID, documentArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReturnFileGuidsForOriginalImagesAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal userState As Object)
            If (Me.ReturnFileGuidsForOriginalImagesOperationCompleted Is Nothing) Then
                Me.ReturnFileGuidsForOriginalImagesOperationCompleted = AddressOf Me.OnReturnFileGuidsForOriginalImagesOperationCompleted
            End If
            Me.InvokeAsync("ReturnFileGuidsForOriginalImages", New Object() {caseContextArtifactID, documentArtifactID}, Me.ReturnFileGuidsForOriginalImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnReturnFileGuidsForOriginalImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReturnFileGuidsForOriginalImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReturnFileGuidsForOriginalImagesCompleted(Me, New ReturnFileGuidsForOriginalImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/Create", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create(ByVal caseContextArtifactID As Integer, ByVal fileDTO As File) As String
            Dim results() As Object = Me.Invoke("Create", New Object() {caseContextArtifactID, fileDTO})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginCreate(ByVal caseContextArtifactID As Integer, ByVal fileDTO As File, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Create", New Object() {caseContextArtifactID, fileDTO}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreate(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseContextArtifactID As Integer, ByVal fileDTO As File)
            Me.CreateAsync(caseContextArtifactID, fileDTO, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseContextArtifactID As Integer, ByVal fileDTO As File, ByVal userState As Object)
            If (Me.CreateOperationCompleted Is Nothing) Then
                Me.CreateOperationCompleted = AddressOf Me.OnCreateOperationCompleted
            End If
            Me.InvokeAsync("Create", New Object() {caseContextArtifactID, fileDTO}, Me.CreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCompleted(Me, New CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/CreateImages", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateImages(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer)
            Me.Invoke("CreateImages", New Object() {caseContextArtifactID, files, documentArtifactID})
        End Sub
        
        '''<remarks/>
        Public Function BeginCreateImages(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateImages", New Object() {caseContextArtifactID, files, documentArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndCreateImages(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateImagesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer)
            Me.CreateImagesAsync(caseContextArtifactID, files, documentArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateImagesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer, ByVal userState As Object)
            If (Me.CreateImagesOperationCompleted Is Nothing) Then
                Me.CreateImagesOperationCompleted = AddressOf Me.OnCreateImagesOperationCompleted
            End If
            Me.InvokeAsync("CreateImages", New Object() {caseContextArtifactID, files, documentArtifactID}, Me.CreateImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateImagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/CreateProductionImages", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateProductionImages(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer)
            Me.Invoke("CreateProductionImages", New Object() {caseContextArtifactID, files, documentArtifactID})
        End Sub
        
        '''<remarks/>
        Public Function BeginCreateProductionImages(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateProductionImages", New Object() {caseContextArtifactID, files, documentArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndCreateProductionImages(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateProductionImagesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer)
            Me.CreateProductionImagesAsync(caseContextArtifactID, files, documentArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateProductionImagesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactID As Integer, ByVal userState As Object)
            If (Me.CreateProductionImagesOperationCompleted Is Nothing) Then
                Me.CreateProductionImagesOperationCompleted = AddressOf Me.OnCreateProductionImagesOperationCompleted
            End If
            Me.InvokeAsync("CreateProductionImages", New Object() {caseContextArtifactID, files, documentArtifactID}, Me.CreateProductionImagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateProductionImagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateProductionImagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateProductionImagesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/CreateNatives", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CreateNatives(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactIDs() As Integer)
            Me.Invoke("CreateNatives", New Object() {caseContextArtifactID, files, documentArtifactIDs})
        End Sub
        
        '''<remarks/>
        Public Function BeginCreateNatives(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactIDs() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateNatives", New Object() {caseContextArtifactID, files, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndCreateNatives(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateNativesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactIDs() As Integer)
            Me.CreateNativesAsync(caseContextArtifactID, files, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateNativesAsync(ByVal caseContextArtifactID As Integer, ByVal files() As FileInfoBase, ByVal documentArtifactIDs() As Integer, ByVal userState As Object)
            If (Me.CreateNativesOperationCompleted Is Nothing) Then
                Me.CreateNativesOperationCompleted = AddressOf Me.OnCreateNativesOperationCompleted
            End If
            Me.InvokeAsync("CreateNatives", New Object() {caseContextArtifactID, files, documentArtifactIDs}, Me.CreateNativesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateNativesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateNativesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateNativesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetHeight", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHeight(ByVal caseContextArtifactID As Integer, ByVal guid As String) As Integer
            Dim results() As Object = Me.Invoke("GetHeight", New Object() {caseContextArtifactID, guid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetHeight(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetHeight", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetHeight(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHeightAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.GetHeightAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHeightAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.GetHeightOperationCompleted Is Nothing) Then
                Me.GetHeightOperationCompleted = AddressOf Me.OnGetHeightOperationCompleted
            End If
            Me.InvokeAsync("GetHeight", New Object() {caseContextArtifactID, guid}, Me.GetHeightOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHeightOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHeightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHeightCompleted(Me, New GetHeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetWidth", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWidth(ByVal caseContextArtifactID As Integer, ByVal guid As String) As Integer
            Dim results() As Object = Me.Invoke("GetWidth", New Object() {caseContextArtifactID, guid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetWidth(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetWidth", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetWidth(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWidthAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.GetWidthAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWidthAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.GetWidthOperationCompleted Is Nothing) Then
                Me.GetWidthOperationCompleted = AddressOf Me.OnGetWidthOperationCompleted
            End If
            Me.InvokeAsync("GetWidth", New Object() {caseContextArtifactID, guid}, Me.GetWidthOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWidthOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWidthCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWidthCompleted(Me, New GetWidthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/DeleteImagesByGuidForDocument", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteImagesByGuidForDocument(ByVal caseContextArtifactID As Integer, ByVal documentArtifactId As Integer, ByVal guidList() As String, ByVal imageOrder() As Integer, ByVal documentIdentifier As String)
            Me.Invoke("DeleteImagesByGuidForDocument", New Object() {caseContextArtifactID, documentArtifactId, guidList, imageOrder, documentIdentifier})
        End Sub
        
        '''<remarks/>
        Public Function BeginDeleteImagesByGuidForDocument(ByVal caseContextArtifactID As Integer, ByVal documentArtifactId As Integer, ByVal guidList() As String, ByVal imageOrder() As Integer, ByVal documentIdentifier As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteImagesByGuidForDocument", New Object() {caseContextArtifactID, documentArtifactId, guidList, imageOrder, documentIdentifier}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDeleteImagesByGuidForDocument(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteImagesByGuidForDocumentAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactId As Integer, ByVal guidList() As String, ByVal imageOrder() As Integer, ByVal documentIdentifier As String)
            Me.DeleteImagesByGuidForDocumentAsync(caseContextArtifactID, documentArtifactId, guidList, imageOrder, documentIdentifier, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteImagesByGuidForDocumentAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactId As Integer, ByVal guidList() As String, ByVal imageOrder() As Integer, ByVal documentIdentifier As String, ByVal userState As Object)
            If (Me.DeleteImagesByGuidForDocumentOperationCompleted Is Nothing) Then
                Me.DeleteImagesByGuidForDocumentOperationCompleted = AddressOf Me.OnDeleteImagesByGuidForDocumentOperationCompleted
            End If
            Me.InvokeAsync("DeleteImagesByGuidForDocument", New Object() {caseContextArtifactID, documentArtifactId, guidList, imageOrder, documentIdentifier}, Me.DeleteImagesByGuidForDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteImagesByGuidForDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteImagesByGuidForDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteImagesByGuidForDocumentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/Delete", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Delete(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.Invoke("Delete", New Object() {caseContextArtifactID, guid})
        End Sub
        
        '''<remarks/>
        Public Function BeginDelete(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Delete", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDelete(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.DeleteAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.DeleteOperationCompleted Is Nothing) Then
                Me.DeleteOperationCompleted = AddressOf Me.OnDeleteOperationCompleted
            End If
            Me.InvokeAsync("Delete", New Object() {caseContextArtifactID, guid}, Me.DeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetRotation", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRotation(ByVal caseContextArtifactID As Integer, ByVal guid As String) As Integer
            Dim results() As Object = Me.Invoke("GetRotation", New Object() {caseContextArtifactID, guid})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRotation(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRotation", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRotation(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRotationAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.GetRotationAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRotationAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.GetRotationOperationCompleted Is Nothing) Then
                Me.GetRotationOperationCompleted = AddressOf Me.OnGetRotationOperationCompleted
            End If
            Me.InvokeAsync("GetRotation", New Object() {caseContextArtifactID, guid}, Me.GetRotationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRotationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRotationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRotationCompleted(Me, New GetRotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/SetRotation", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetRotation(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal rotation As Integer)
            Me.Invoke("SetRotation", New Object() {caseContextArtifactID, guid, rotation})
        End Sub
        
        '''<remarks/>
        Public Function BeginSetRotation(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal rotation As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetRotation", New Object() {caseContextArtifactID, guid, rotation}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndSetRotation(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRotationAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal rotation As Integer)
            Me.SetRotationAsync(caseContextArtifactID, guid, rotation, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRotationAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal rotation As Integer, ByVal userState As Object)
            If (Me.SetRotationOperationCompleted Is Nothing) Then
                Me.SetRotationOperationCompleted = AddressOf Me.OnSetRotationOperationCompleted
            End If
            Me.InvokeAsync("SetRotation", New Object() {caseContextArtifactID, guid, rotation}, Me.SetRotationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRotationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRotationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRotationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetFullTextGuidsByDocumentArtifactIdAndType"& _ 
            "", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFullTextGuidsByDocumentArtifactIdAndType(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal TypeId As Integer) As String
            Dim results() As Object = Me.Invoke("GetFullTextGuidsByDocumentArtifactIdAndType", New Object() {caseContextArtifactID, documentArtifactID, TypeId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetFullTextGuidsByDocumentArtifactIdAndType(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal TypeId As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFullTextGuidsByDocumentArtifactIdAndType", New Object() {caseContextArtifactID, documentArtifactID, TypeId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetFullTextGuidsByDocumentArtifactIdAndType(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFullTextGuidsByDocumentArtifactIdAndTypeAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal TypeId As Integer)
            Me.GetFullTextGuidsByDocumentArtifactIdAndTypeAsync(caseContextArtifactID, documentArtifactID, TypeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFullTextGuidsByDocumentArtifactIdAndTypeAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactID As Integer, ByVal TypeId As Integer, ByVal userState As Object)
            If (Me.GetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted Is Nothing) Then
                Me.GetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted = AddressOf Me.OnGetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted
            End If
            Me.InvokeAsync("GetFullTextGuidsByDocumentArtifactIdAndType", New Object() {caseContextArtifactID, documentArtifactID, TypeId}, Me.GetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFullTextGuidsByDocumentArtifactIdAndTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFullTextGuidsByDocumentArtifactIdAndTypeCompleted(Me, New GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RetrieveNativesFileSize", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveNativesFileSize(ByVal caseContextArtifactID As Integer, ByVal guid As String) As Long
            Dim results() As Object = Me.Invoke("RetrieveNativesFileSize", New Object() {caseContextArtifactID, guid})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveNativesFileSize(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveNativesFileSize", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveNativesFileSize(ByVal asyncResult As System.IAsyncResult) As Long
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesFileSizeAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.RetrieveNativesFileSizeAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesFileSizeAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.RetrieveNativesFileSizeOperationCompleted Is Nothing) Then
                Me.RetrieveNativesFileSizeOperationCompleted = AddressOf Me.OnRetrieveNativesFileSizeOperationCompleted
            End If
            Me.InvokeAsync("RetrieveNativesFileSize", New Object() {caseContextArtifactID, guid}, Me.RetrieveNativesFileSizeOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveNativesFileSizeOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveNativesFileSizeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveNativesFileSizeCompleted(Me, New RetrieveNativesFileSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetFileByGuid", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileByGuid(ByVal caseContextArtifactID As Integer, ByVal guid As String) As File
            Dim results() As Object = Me.Invoke("GetFileByGuid", New Object() {caseContextArtifactID, guid})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Function BeginGetFileByGuid(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFileByGuid", New Object() {caseContextArtifactID, guid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetFileByGuid(ByVal asyncResult As System.IAsyncResult) As File
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileByGuidAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String)
            Me.GetFileByGuidAsync(caseContextArtifactID, guid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileByGuidAsync(ByVal caseContextArtifactID As Integer, ByVal guid As String, ByVal userState As Object)
            If (Me.GetFileByGuidOperationCompleted Is Nothing) Then
                Me.GetFileByGuidOperationCompleted = AddressOf Me.OnGetFileByGuidOperationCompleted
            End If
            Me.InvokeAsync("GetFileByGuid", New Object() {caseContextArtifactID, guid}, Me.GetFileByGuidOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileByGuidOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileByGuidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileByGuidCompleted(Me, New GetFileByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetTotalImageCountByArtifactIDs", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTotalImageCountByArtifactIDs(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer) As Integer
            Dim results() As Object = Me.Invoke("GetTotalImageCountByArtifactIDs", New Object() {caseContextArtifactID, documentArtifactIDs})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTotalImageCountByArtifactIDs(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTotalImageCountByArtifactIDs", New Object() {caseContextArtifactID, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTotalImageCountByArtifactIDs(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTotalImageCountByArtifactIDsAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer)
            Me.GetTotalImageCountByArtifactIDsAsync(caseContextArtifactID, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTotalImageCountByArtifactIDsAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal userState As Object)
            If (Me.GetTotalImageCountByArtifactIDsOperationCompleted Is Nothing) Then
                Me.GetTotalImageCountByArtifactIDsOperationCompleted = AddressOf Me.OnGetTotalImageCountByArtifactIDsOperationCompleted
            End If
            Me.InvokeAsync("GetTotalImageCountByArtifactIDs", New Object() {caseContextArtifactID, documentArtifactIDs}, Me.GetTotalImageCountByArtifactIDsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTotalImageCountByArtifactIDsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTotalImageCountByArtifactIDsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTotalImageCountByArtifactIDsCompleted(Me, New GetTotalImageCountByArtifactIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/SetRotationForAll", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetRotationForAll(ByVal caseContextArtifactID As Integer, ByVal artifactID As Integer, ByVal rotation As Integer, ByVal productionArtifactID As Integer)
            Me.Invoke("SetRotationForAll", New Object() {caseContextArtifactID, artifactID, rotation, productionArtifactID})
        End Sub
        
        '''<remarks/>
        Public Function BeginSetRotationForAll(ByVal caseContextArtifactID As Integer, ByVal artifactID As Integer, ByVal rotation As Integer, ByVal productionArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("SetRotationForAll", New Object() {caseContextArtifactID, artifactID, rotation, productionArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndSetRotationForAll(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRotationForAllAsync(ByVal caseContextArtifactID As Integer, ByVal artifactID As Integer, ByVal rotation As Integer, ByVal productionArtifactID As Integer)
            Me.SetRotationForAllAsync(caseContextArtifactID, artifactID, rotation, productionArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRotationForAllAsync(ByVal caseContextArtifactID As Integer, ByVal artifactID As Integer, ByVal rotation As Integer, ByVal productionArtifactID As Integer, ByVal userState As Object)
            If (Me.SetRotationForAllOperationCompleted Is Nothing) Then
                Me.SetRotationForAllOperationCompleted = AddressOf Me.OnSetRotationForAllOperationCompleted
            End If
            Me.InvokeAsync("SetRotationForAll", New Object() {caseContextArtifactID, artifactID, rotation, productionArtifactID}, Me.SetRotationForAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRotationForAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRotationForAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRotationForAllCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class File
        
        Private fileIDField As Integer
        
        Private objectArtifactIDField As Integer
        
        Private guidField As String
        
        Private orderField As Integer
        
        Private typeField As Integer
        
        Private filenameField As String
        
        Private sizeField As System.Nullable(Of Long)
        
        Private locationField As String
        
        Private documentArtifactIDField As Integer
        
        Private rotationField As Integer
        
        Private redactionsField() As Redaction
        
        Private identifierField As String
        
        Private statusField As Integer
        
        Private inRepositoryField As Boolean
        
        Private messageField As String
        
        Private clearExistingField As Boolean
        
        '''<remarks/>
        Public Property FileID() As Integer
            Get
                Return Me.fileIDField
            End Get
            Set
                Me.fileIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObjectArtifactID() As Integer
            Get
                Return Me.objectArtifactIDField
            End Get
            Set
                Me.objectArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Guid() As String
            Get
                Return Me.guidField
            End Get
            Set
                Me.guidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Order() As Integer
            Get
                Return Me.orderField
            End Get
            Set
                Me.orderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As Integer
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Size() As System.Nullable(Of Long)
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentArtifactID() As Integer
            Get
                Return Me.documentArtifactIDField
            End Get
            Set
                Me.documentArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Rotation() As Integer
            Get
                Return Me.rotationField
            End Get
            Set
                Me.rotationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Redactions() As Redaction()
            Get
                Return Me.redactionsField
            End Get
            Set
                Me.redactionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identifier() As String
            Get
                Return Me.identifierField
            End Get
            Set
                Me.identifierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As Integer
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InRepository() As Boolean
            Get
                Return Me.inRepositoryField
            End Get
            Set
                Me.inRepositoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClearExisting() As Boolean
            Get
                Return Me.clearExistingField
            End Get
            Set
                Me.clearExistingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class Redaction
        
        Private idField As Integer
        
        Private fileGuidField As String
        
        Private xField As Integer
        
        Private yField As Integer
        
        Private widthField As Integer
        
        Private heightField As Integer
        
        Private typeField As String
        
        Private markupSetArtifactIDField As Integer
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileGuid() As String
            Get
                Return Me.fileGuidField
            End Get
            Set
                Me.fileGuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property X() As Integer
            Get
                Return Me.xField
            End Get
            Set
                Me.xField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Y() As Integer
            Get
                Return Me.yField
            End Get
            Set
                Me.yField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Width() As Integer
            Get
                Return Me.widthField
            End Get
            Set
                Me.widthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Height() As Integer
            Get
                Return Me.heightField
            End Get
            Set
                Me.heightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MarkupSetArtifactID() As Integer
            Get
                Return Me.markupSetArtifactIDField
            End Get
            Set
                Me.markupSetArtifactIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class FileInfoBase
        
        Private fileNameField As String
        
        Private fileGuidField As String
        
        Private identifierField As String
        
        Private locationField As String
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileGuid() As String
            Get
                Return Me.fileGuidField
            End Get
            Set
                Me.fileGuidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Identifier() As String
            Get
                Return Me.identifierField
            End Get
            Set
                Me.identifierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveByProductionArtifactIDForProductionCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveByProductionArtifactIDForProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveByProductionArtifactIDForProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveFileGuidsByDocumentArtifactIDAndProductionArtifactIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ReturnFileGuidsForOriginalImagesCompletedEventHandler(ByVal sender As Object, ByVal e As ReturnFileGuidsForOriginalImagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReturnFileGuidsForOriginalImagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateImagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateProductionImagesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateNativesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetHeightCompletedEventHandler(ByVal sender As Object, ByVal e As GetHeightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHeightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetWidthCompletedEventHandler(ByVal sender As Object, ByVal e As GetWidthCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWidthCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteImagesByGuidForDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub DeleteCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetRotationCompletedEventHandler(ByVal sender As Object, ByVal e As GetRotationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRotationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetRotationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFullTextGuidsByDocumentArtifactIdAndTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveNativesFileSizeCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveNativesFileSizeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveNativesFileSizeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetFileByGuidCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileByGuidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileByGuidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub GetTotalImageCountByArtifactIDsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTotalImageCountByArtifactIDsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTotalImageCountByArtifactIDsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub SetRotationForAllCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
