'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
'
Namespace kCura.EDDS.WebAPI.BulkImportManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="BulkImportManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/BulkImportManager"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(FieldInfoBase))>  _
    Partial Public Class BulkImportManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private BulkImportImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BulkImportProductionImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateImageErrorFilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImageRunHasErrorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BulkImportNativeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BulkImportObjectsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateNativeErrorFilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NativeRunHasErrorsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisposeTempTablesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/EDDSWebAPI/BulkImportManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event BulkImportImageCompleted As BulkImportImageCompletedEventHandler
        
        '''<remarks/>
        Public Event BulkImportProductionImageCompleted As BulkImportProductionImageCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateImageErrorFilesCompleted As GenerateImageErrorFilesCompletedEventHandler
        
        '''<remarks/>
        Public Event ImageRunHasErrorsCompleted As ImageRunHasErrorsCompletedEventHandler
        
        '''<remarks/>
        Public Event BulkImportNativeCompleted As BulkImportNativeCompletedEventHandler
        
        '''<remarks/>
        Public Event BulkImportObjectsCompleted As BulkImportObjectsCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateNativeErrorFilesCompleted As GenerateNativeErrorFilesCompletedEventHandler
        
        '''<remarks/>
        Public Event NativeRunHasErrorsCompleted As NativeRunHasErrorsCompletedEventHandler
        
        '''<remarks/>
        Public Event DisposeTempTablesCompleted As DisposeTempTablesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/BulkImportImage", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BulkImportImage(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal useBulk As Boolean, ByVal runID As String, ByVal keyFieldID As Integer, ByVal inRepository As Boolean) As MassImportResults
            Dim results() As Object = Me.Invoke("BulkImportImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, useBulk, runID, keyFieldID, inRepository})
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Function BeginBulkImportImage(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal useBulk As Boolean, ByVal runID As String, ByVal keyFieldID As Integer, ByVal inRepository As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BulkImportImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, useBulk, runID, keyFieldID, inRepository}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBulkImportImage(ByVal asyncResult As System.IAsyncResult) As MassImportResults
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BulkImportImageAsync(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal useBulk As Boolean, ByVal runID As String, ByVal keyFieldID As Integer, ByVal inRepository As Boolean)
            Me.BulkImportImageAsync(appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, useBulk, runID, keyFieldID, inRepository, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BulkImportImageAsync(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal useBulk As Boolean, ByVal runID As String, ByVal keyFieldID As Integer, ByVal inRepository As Boolean, ByVal userState As Object)
            If (Me.BulkImportImageOperationCompleted Is Nothing) Then
                Me.BulkImportImageOperationCompleted = AddressOf Me.OnBulkImportImageOperationCompleted
            End If
            Me.InvokeAsync("BulkImportImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, useBulk, runID, keyFieldID, inRepository}, Me.BulkImportImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnBulkImportImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.BulkImportImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BulkImportImageCompleted(Me, New BulkImportImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/BulkImportProductionImage", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BulkImportProductionImage(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal productionArtifactID As Integer, ByVal useBulk As Boolean, ByVal runID As String, ByVal productionKeyFieldArtifactID As Integer, ByVal inRepository As Boolean) As MassImportResults
            Dim results() As Object = Me.Invoke("BulkImportProductionImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, productionArtifactID, useBulk, runID, productionKeyFieldArtifactID, inRepository})
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Function BeginBulkImportProductionImage(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal productionArtifactID As Integer, ByVal useBulk As Boolean, ByVal runID As String, ByVal productionKeyFieldArtifactID As Integer, ByVal inRepository As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BulkImportProductionImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, productionArtifactID, useBulk, runID, productionKeyFieldArtifactID, inRepository}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBulkImportProductionImage(ByVal asyncResult As System.IAsyncResult) As MassImportResults
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BulkImportProductionImageAsync(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal productionArtifactID As Integer, ByVal useBulk As Boolean, ByVal runID As String, ByVal productionKeyFieldArtifactID As Integer, ByVal inRepository As Boolean)
            Me.BulkImportProductionImageAsync(appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, productionArtifactID, useBulk, runID, productionKeyFieldArtifactID, inRepository, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BulkImportProductionImageAsync(ByVal appID As Integer, ByVal bulkFileName As String, ByVal uploadFullText As Boolean, ByVal overwrite As OverwriteType, ByVal destinationFolderArtifactID As Integer, ByVal repository As String, ByVal productionArtifactID As Integer, ByVal useBulk As Boolean, ByVal runID As String, ByVal productionKeyFieldArtifactID As Integer, ByVal inRepository As Boolean, ByVal userState As Object)
            If (Me.BulkImportProductionImageOperationCompleted Is Nothing) Then
                Me.BulkImportProductionImageOperationCompleted = AddressOf Me.OnBulkImportProductionImageOperationCompleted
            End If
            Me.InvokeAsync("BulkImportProductionImage", New Object() {appID, bulkFileName, uploadFullText, overwrite, destinationFolderArtifactID, repository, productionArtifactID, useBulk, runID, productionKeyFieldArtifactID, inRepository}, Me.BulkImportProductionImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnBulkImportProductionImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.BulkImportProductionImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BulkImportProductionImageCompleted(Me, New BulkImportProductionImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/GenerateImageErrorFiles", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateImageErrorFiles(ByVal appID As Integer, ByVal importKey As String, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer) As ErrorFileKey
            Dim results() As Object = Me.Invoke("GenerateImageErrorFiles", New Object() {appID, importKey, writeHeader, keyFieldID})
            Return CType(results(0),ErrorFileKey)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerateImageErrorFiles(ByVal appID As Integer, ByVal importKey As String, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerateImageErrorFiles", New Object() {appID, importKey, writeHeader, keyFieldID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerateImageErrorFiles(ByVal asyncResult As System.IAsyncResult) As ErrorFileKey
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ErrorFileKey)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateImageErrorFilesAsync(ByVal appID As Integer, ByVal importKey As String, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer)
            Me.GenerateImageErrorFilesAsync(appID, importKey, writeHeader, keyFieldID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateImageErrorFilesAsync(ByVal appID As Integer, ByVal importKey As String, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer, ByVal userState As Object)
            If (Me.GenerateImageErrorFilesOperationCompleted Is Nothing) Then
                Me.GenerateImageErrorFilesOperationCompleted = AddressOf Me.OnGenerateImageErrorFilesOperationCompleted
            End If
            Me.InvokeAsync("GenerateImageErrorFiles", New Object() {appID, importKey, writeHeader, keyFieldID}, Me.GenerateImageErrorFilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateImageErrorFilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateImageErrorFilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateImageErrorFilesCompleted(Me, New GenerateImageErrorFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/ImageRunHasErrors", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImageRunHasErrors(ByVal appID As Integer, ByVal runId As String) As Boolean
            Dim results() As Object = Me.Invoke("ImageRunHasErrors", New Object() {appID, runId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginImageRunHasErrors(ByVal appID As Integer, ByVal runId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ImageRunHasErrors", New Object() {appID, runId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndImageRunHasErrors(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImageRunHasErrorsAsync(ByVal appID As Integer, ByVal runId As String)
            Me.ImageRunHasErrorsAsync(appID, runId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImageRunHasErrorsAsync(ByVal appID As Integer, ByVal runId As String, ByVal userState As Object)
            If (Me.ImageRunHasErrorsOperationCompleted Is Nothing) Then
                Me.ImageRunHasErrorsOperationCompleted = AddressOf Me.OnImageRunHasErrorsOperationCompleted
            End If
            Me.InvokeAsync("ImageRunHasErrors", New Object() {appID, runId}, Me.ImageRunHasErrorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnImageRunHasErrorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImageRunHasErrorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImageRunHasErrorsCompleted(Me, New ImageRunHasErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/BulkImportNative", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BulkImportNative(ByVal appID As Integer, ByVal settings As NativeLoadInfo, ByVal inRepository As Boolean) As MassImportResults
            Dim results() As Object = Me.Invoke("BulkImportNative", New Object() {appID, settings, inRepository})
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Function BeginBulkImportNative(ByVal appID As Integer, ByVal settings As NativeLoadInfo, ByVal inRepository As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BulkImportNative", New Object() {appID, settings, inRepository}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBulkImportNative(ByVal asyncResult As System.IAsyncResult) As MassImportResults
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BulkImportNativeAsync(ByVal appID As Integer, ByVal settings As NativeLoadInfo, ByVal inRepository As Boolean)
            Me.BulkImportNativeAsync(appID, settings, inRepository, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BulkImportNativeAsync(ByVal appID As Integer, ByVal settings As NativeLoadInfo, ByVal inRepository As Boolean, ByVal userState As Object)
            If (Me.BulkImportNativeOperationCompleted Is Nothing) Then
                Me.BulkImportNativeOperationCompleted = AddressOf Me.OnBulkImportNativeOperationCompleted
            End If
            Me.InvokeAsync("BulkImportNative", New Object() {appID, settings, inRepository}, Me.BulkImportNativeOperationCompleted, userState)
        End Sub
        
        Private Sub OnBulkImportNativeOperationCompleted(ByVal arg As Object)
            If (Not (Me.BulkImportNativeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BulkImportNativeCompleted(Me, New BulkImportNativeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/BulkImportObjects", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BulkImportObjects(ByVal appID As Integer, ByVal settings As ObjectLoadInfo, ByVal inRepository As Boolean) As MassImportResults
            Dim results() As Object = Me.Invoke("BulkImportObjects", New Object() {appID, settings, inRepository})
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Function BeginBulkImportObjects(ByVal appID As Integer, ByVal settings As ObjectLoadInfo, ByVal inRepository As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BulkImportObjects", New Object() {appID, settings, inRepository}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBulkImportObjects(ByVal asyncResult As System.IAsyncResult) As MassImportResults
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),MassImportResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BulkImportObjectsAsync(ByVal appID As Integer, ByVal settings As ObjectLoadInfo, ByVal inRepository As Boolean)
            Me.BulkImportObjectsAsync(appID, settings, inRepository, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BulkImportObjectsAsync(ByVal appID As Integer, ByVal settings As ObjectLoadInfo, ByVal inRepository As Boolean, ByVal userState As Object)
            If (Me.BulkImportObjectsOperationCompleted Is Nothing) Then
                Me.BulkImportObjectsOperationCompleted = AddressOf Me.OnBulkImportObjectsOperationCompleted
            End If
            Me.InvokeAsync("BulkImportObjects", New Object() {appID, settings, inRepository}, Me.BulkImportObjectsOperationCompleted, userState)
        End Sub
        
        Private Sub OnBulkImportObjectsOperationCompleted(ByVal arg As Object)
            If (Not (Me.BulkImportObjectsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BulkImportObjectsCompleted(Me, New BulkImportObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/GenerateNativeErrorFiles", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateNativeErrorFiles(ByVal appID As Integer, ByVal runID As String, ByVal artifactTypeID As Integer, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer) As ErrorFileKey
            Dim results() As Object = Me.Invoke("GenerateNativeErrorFiles", New Object() {appID, runID, artifactTypeID, writeHeader, keyFieldID})
            Return CType(results(0),ErrorFileKey)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerateNativeErrorFiles(ByVal appID As Integer, ByVal runID As String, ByVal artifactTypeID As Integer, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerateNativeErrorFiles", New Object() {appID, runID, artifactTypeID, writeHeader, keyFieldID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerateNativeErrorFiles(ByVal asyncResult As System.IAsyncResult) As ErrorFileKey
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),ErrorFileKey)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateNativeErrorFilesAsync(ByVal appID As Integer, ByVal runID As String, ByVal artifactTypeID As Integer, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer)
            Me.GenerateNativeErrorFilesAsync(appID, runID, artifactTypeID, writeHeader, keyFieldID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateNativeErrorFilesAsync(ByVal appID As Integer, ByVal runID As String, ByVal artifactTypeID As Integer, ByVal writeHeader As Boolean, ByVal keyFieldID As Integer, ByVal userState As Object)
            If (Me.GenerateNativeErrorFilesOperationCompleted Is Nothing) Then
                Me.GenerateNativeErrorFilesOperationCompleted = AddressOf Me.OnGenerateNativeErrorFilesOperationCompleted
            End If
            Me.InvokeAsync("GenerateNativeErrorFiles", New Object() {appID, runID, artifactTypeID, writeHeader, keyFieldID}, Me.GenerateNativeErrorFilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateNativeErrorFilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateNativeErrorFilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateNativeErrorFilesCompleted(Me, New GenerateNativeErrorFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/NativeRunHasErrors", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NativeRunHasErrors(ByVal appID As Integer, ByVal runId As String) As Boolean
            Dim results() As Object = Me.Invoke("NativeRunHasErrors", New Object() {appID, runId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginNativeRunHasErrors(ByVal appID As Integer, ByVal runId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("NativeRunHasErrors", New Object() {appID, runId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndNativeRunHasErrors(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub NativeRunHasErrorsAsync(ByVal appID As Integer, ByVal runId As String)
            Me.NativeRunHasErrorsAsync(appID, runId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NativeRunHasErrorsAsync(ByVal appID As Integer, ByVal runId As String, ByVal userState As Object)
            If (Me.NativeRunHasErrorsOperationCompleted Is Nothing) Then
                Me.NativeRunHasErrorsOperationCompleted = AddressOf Me.OnNativeRunHasErrorsOperationCompleted
            End If
            Me.InvokeAsync("NativeRunHasErrors", New Object() {appID, runId}, Me.NativeRunHasErrorsOperationCompleted, userState)
        End Sub
        
        Private Sub OnNativeRunHasErrorsOperationCompleted(ByVal arg As Object)
            If (Not (Me.NativeRunHasErrorsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NativeRunHasErrorsCompleted(Me, New NativeRunHasErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/BulkImportManager/DisposeTempTables", RequestNamespace:="http://www.kCura.com/EDDS/BulkImportManager", ResponseNamespace:="http://www.kCura.com/EDDS/BulkImportManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DisposeTempTables(ByVal appID As Integer, ByVal runId As String) As Object
            Dim results() As Object = Me.Invoke("DisposeTempTables", New Object() {appID, runId})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Function BeginDisposeTempTables(ByVal appID As Integer, ByVal runId As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DisposeTempTables", New Object() {appID, runId}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDisposeTempTables(ByVal asyncResult As System.IAsyncResult) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DisposeTempTablesAsync(ByVal appID As Integer, ByVal runId As String)
            Me.DisposeTempTablesAsync(appID, runId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisposeTempTablesAsync(ByVal appID As Integer, ByVal runId As String, ByVal userState As Object)
            If (Me.DisposeTempTablesOperationCompleted Is Nothing) Then
                Me.DisposeTempTablesOperationCompleted = AddressOf Me.OnDisposeTempTablesOperationCompleted
            End If
            Me.InvokeAsync("DisposeTempTables", New Object() {appID, runId}, Me.DisposeTempTablesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisposeTempTablesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisposeTempTablesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisposeTempTablesCompleted(Me, New DisposeTempTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Public Enum OverwriteType
        
        '''<remarks/>
        Append
        
        '''<remarks/>
        Overlay
        
        '''<remarks/>
        Both
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class MassImportResults
        
        Private filesProcessedField As Integer
        
        Private artifactsCreatedField As Integer
        
        Private artifactsUpdatedField As Integer
        
        Private errorTextField As String
        
        Private runIDField As String
        
        '''<remarks/>
        Public Property FilesProcessed() As Integer
            Get
                Return Me.filesProcessedField
            End Get
            Set
                Me.filesProcessedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ArtifactsCreated() As Integer
            Get
                Return Me.artifactsCreatedField
            End Get
            Set
                Me.artifactsCreatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ArtifactsUpdated() As Integer
            Get
                Return Me.artifactsUpdatedField
            End Get
            Set
                Me.artifactsUpdatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorText() As String
            Get
                Return Me.errorTextField
            End Get
            Set
                Me.errorTextField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RunID() As String
            Get
                Return Me.runIDField
            End Get
            Set
                Me.runIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(FieldInfo)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class FieldInfoBase
        
        Private artifactIDField As Integer
        
        Private categoryField As FieldCategory
        
        Private typeField As FieldType
        
        Private displayNameField As String
        
        Private textLengthField As Integer
        
        Private codeTypeIDField As Integer
        
        '''<remarks/>
        Public Property ArtifactID() As Integer
            Get
                Return Me.artifactIDField
            End Get
            Set
                Me.artifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Category() As FieldCategory
            Get
                Return Me.categoryField
            End Get
            Set
                Me.categoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As FieldType
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TextLength() As Integer
            Get
                Return Me.textLengthField
            End Get
            Set
                Me.textLengthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodeTypeID() As Integer
            Get
                Return Me.codeTypeIDField
            End Get
            Set
                Me.codeTypeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Public Enum FieldCategory
        
        '''<remarks/>
        Generic
        
        '''<remarks/>
        FullText
        
        '''<remarks/>
        Identifier
        
        '''<remarks/>
        Reflected
        
        '''<remarks/>
        Comments
        
        '''<remarks/>
        Relational
        
        '''<remarks/>
        ProductionMarker
        
        '''<remarks/>
        AutoCreate
        
        '''<remarks/>
        FileSize
        
        '''<remarks/>
        FolderName
        
        '''<remarks/>
        FileInfo
        
        '''<remarks/>
        ParentArtifact
        
        '''<remarks/>
        MarkupSetMarker
        
        '''<remarks/>
        GenericSystem
        
        '''<remarks/>
        MultiReflected
        
        '''<remarks/>
        Batch
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Public Enum FieldType
        
        '''<remarks/>
        Varchar
        
        '''<remarks/>
        [Integer]
        
        '''<remarks/>
        [Date]
        
        '''<remarks/>
        [Boolean]
        
        '''<remarks/>
        Text
        
        '''<remarks/>
        Code
        
        '''<remarks/>
        [Decimal]
        
        '''<remarks/>
        Currency
        
        '''<remarks/>
        MultiCode
        
        '''<remarks/>
        File
        
        '''<remarks/>
        [Object]
        
        '''<remarks/>
        User
        
        '''<remarks/>
        LayoutText
        
        '''<remarks/>
        Objects
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class FieldInfo
        Inherits FieldInfoBase
        
        Private formatStringField As String
        
        Private isUnicodeEnabledField As Boolean
        
        '''<remarks/>
        Public Property FormatString() As String
            Get
                Return Me.formatStringField
            End Get
            Set
                Me.formatStringField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsUnicodeEnabled() As Boolean
            Get
                Return Me.isUnicodeEnabledField
            End Get
            Set
                Me.isUnicodeEnabledField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ObjectLoadInfo)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class NativeLoadInfo
        
        Private mappedFieldsField() As FieldInfo
        
        Private overlayField As OverwriteType
        
        Private repositoryField As String
        
        Private runIDField As String
        
        Private dataFileNameField As String
        
        Private useBulkDataImportField As Boolean
        
        Private uploadFilesField As Boolean
        
        Private codeFileNameField As String
        
        Private objectFileNameField As String
        
        Private keyFieldArtifactIDField As Integer
        
        '''<remarks/>
        Public Property MappedFields() As FieldInfo()
            Get
                Return Me.mappedFieldsField
            End Get
            Set
                Me.mappedFieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Overlay() As OverwriteType
            Get
                Return Me.overlayField
            End Get
            Set
                Me.overlayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Repository() As String
            Get
                Return Me.repositoryField
            End Get
            Set
                Me.repositoryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RunID() As String
            Get
                Return Me.runIDField
            End Get
            Set
                Me.runIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataFileName() As String
            Get
                Return Me.dataFileNameField
            End Get
            Set
                Me.dataFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UseBulkDataImport() As Boolean
            Get
                Return Me.useBulkDataImportField
            End Get
            Set
                Me.useBulkDataImportField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UploadFiles() As Boolean
            Get
                Return Me.uploadFilesField
            End Get
            Set
                Me.uploadFilesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CodeFileName() As String
            Get
                Return Me.codeFileNameField
            End Get
            Set
                Me.codeFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObjectFileName() As String
            Get
                Return Me.objectFileNameField
            End Get
            Set
                Me.objectFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property KeyFieldArtifactID() As Integer
            Get
                Return Me.keyFieldArtifactIDField
            End Get
            Set
                Me.keyFieldArtifactIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class ObjectLoadInfo
        Inherits NativeLoadInfo
        
        Private artifactTypeIDField As Integer
        
        '''<remarks/>
        Public Property ArtifactTypeID() As Integer
            Get
                Return Me.artifactTypeIDField
            End Get
            Set
                Me.artifactTypeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/BulkImportManager")>  _
    Partial Public Class ErrorFileKey
        
        Private opticonKeyField As String
        
        Private logKeyField As String
        
        '''<remarks/>
        Public Property OpticonKey() As String
            Get
                Return Me.opticonKeyField
            End Get
            Set
                Me.opticonKeyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LogKey() As String
            Get
                Return Me.logKeyField
            End Get
            Set
                Me.logKeyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub BulkImportImageCompletedEventHandler(ByVal sender As Object, ByVal e As BulkImportImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BulkImportImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MassImportResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MassImportResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub BulkImportProductionImageCompletedEventHandler(ByVal sender As Object, ByVal e As BulkImportProductionImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BulkImportProductionImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MassImportResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MassImportResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub GenerateImageErrorFilesCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateImageErrorFilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateImageErrorFilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ErrorFileKey
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ErrorFileKey)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub ImageRunHasErrorsCompletedEventHandler(ByVal sender As Object, ByVal e As ImageRunHasErrorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImageRunHasErrorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub BulkImportNativeCompletedEventHandler(ByVal sender As Object, ByVal e As BulkImportNativeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BulkImportNativeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MassImportResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MassImportResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub BulkImportObjectsCompletedEventHandler(ByVal sender As Object, ByVal e As BulkImportObjectsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BulkImportObjectsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MassImportResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MassImportResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub GenerateNativeErrorFilesCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateNativeErrorFilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateNativeErrorFilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ErrorFileKey
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ErrorFileKey)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub NativeRunHasErrorsCompletedEventHandler(ByVal sender As Object, ByVal e As NativeRunHasErrorsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NativeRunHasErrorsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub DisposeTempTablesCompletedEventHandler(ByVal sender As Object, ByVal e As DisposeTempTablesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DisposeTempTablesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
End Namespace
