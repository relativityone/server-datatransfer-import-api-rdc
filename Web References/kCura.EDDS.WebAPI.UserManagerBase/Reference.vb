'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
'
Namespace kCura.EDDS.WebAPI.UserManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="UserManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/UserManager")>  _
    Partial Public Class UserManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private UpdateImageViewerDefaultViewModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateOIXDocumentModeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSelectedMarkupSetArtifactIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateDefaultRedactionTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogoutOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClearCookiesBeforeLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoggedInOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginWithAuthenticationTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateAuthenticationTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateDistributedAuthenticationTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestAuthenticationTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveAllAssignableInCaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/RelativityWebApi/UserManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event UpdateImageViewerDefaultViewModeCompleted As UpdateImageViewerDefaultViewModeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateOIXDocumentModeCompleted As UpdateOIXDocumentModeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSelectedMarkupSetArtifactIDCompleted As UpdateSelectedMarkupSetArtifactIDCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateDefaultRedactionTextCompleted As UpdateDefaultRedactionTextCompletedEventHandler
        
        '''<remarks/>
        Public Event LogoutCompleted As LogoutCompletedEventHandler
        
        '''<remarks/>
        Public Event ClearCookiesBeforeLoginCompleted As ClearCookiesBeforeLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LoggedInCompleted As LoggedInCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginWithAuthenticationTokenCompleted As LoginWithAuthenticationTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateAuthenticationTokenCompleted As GenerateAuthenticationTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateDistributedAuthenticationTokenCompleted As GenerateDistributedAuthenticationTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestAuthenticationTokenCompleted As GetLatestAuthenticationTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveAllAssignableInCaseCompleted As RetrieveAllAssignableInCaseCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateImageViewerDefaultViewMode", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateImageViewerDefaultViewMode(ByVal defaultViewMode As String)
            Me.Invoke("UpdateImageViewerDefaultViewMode", New Object() {defaultViewMode})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateImageViewerDefaultViewMode(ByVal defaultViewMode As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateImageViewerDefaultViewMode", New Object() {defaultViewMode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateImageViewerDefaultViewMode(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateImageViewerDefaultViewModeAsync(ByVal defaultViewMode As String)
            Me.UpdateImageViewerDefaultViewModeAsync(defaultViewMode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateImageViewerDefaultViewModeAsync(ByVal defaultViewMode As String, ByVal userState As Object)
            If (Me.UpdateImageViewerDefaultViewModeOperationCompleted Is Nothing) Then
                Me.UpdateImageViewerDefaultViewModeOperationCompleted = AddressOf Me.OnUpdateImageViewerDefaultViewModeOperationCompleted
            End If
            Me.InvokeAsync("UpdateImageViewerDefaultViewMode", New Object() {defaultViewMode}, Me.UpdateImageViewerDefaultViewModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateImageViewerDefaultViewModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateImageViewerDefaultViewModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateImageViewerDefaultViewModeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateOIXDocumentMode", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateOIXDocumentMode(ByVal mode As Integer)
            Me.Invoke("UpdateOIXDocumentMode", New Object() {mode})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateOIXDocumentMode(ByVal mode As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateOIXDocumentMode", New Object() {mode}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateOIXDocumentMode(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateOIXDocumentModeAsync(ByVal mode As Integer)
            Me.UpdateOIXDocumentModeAsync(mode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateOIXDocumentModeAsync(ByVal mode As Integer, ByVal userState As Object)
            If (Me.UpdateOIXDocumentModeOperationCompleted Is Nothing) Then
                Me.UpdateOIXDocumentModeOperationCompleted = AddressOf Me.OnUpdateOIXDocumentModeOperationCompleted
            End If
            Me.InvokeAsync("UpdateOIXDocumentMode", New Object() {mode}, Me.UpdateOIXDocumentModeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateOIXDocumentModeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateOIXDocumentModeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateOIXDocumentModeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateSelectedMarkupSetArtifactID", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateSelectedMarkupSetArtifactID(ByVal selectedMarkupSetArtifactID As Integer)
            Me.Invoke("UpdateSelectedMarkupSetArtifactID", New Object() {selectedMarkupSetArtifactID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateSelectedMarkupSetArtifactID(ByVal selectedMarkupSetArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateSelectedMarkupSetArtifactID", New Object() {selectedMarkupSetArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateSelectedMarkupSetArtifactID(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSelectedMarkupSetArtifactIDAsync(ByVal selectedMarkupSetArtifactID As Integer)
            Me.UpdateSelectedMarkupSetArtifactIDAsync(selectedMarkupSetArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSelectedMarkupSetArtifactIDAsync(ByVal selectedMarkupSetArtifactID As Integer, ByVal userState As Object)
            If (Me.UpdateSelectedMarkupSetArtifactIDOperationCompleted Is Nothing) Then
                Me.UpdateSelectedMarkupSetArtifactIDOperationCompleted = AddressOf Me.OnUpdateSelectedMarkupSetArtifactIDOperationCompleted
            End If
            Me.InvokeAsync("UpdateSelectedMarkupSetArtifactID", New Object() {selectedMarkupSetArtifactID}, Me.UpdateSelectedMarkupSetArtifactIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSelectedMarkupSetArtifactIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSelectedMarkupSetArtifactIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSelectedMarkupSetArtifactIDCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateDefaultRedactionText", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateDefaultRedactionText(ByVal text As String)
            Me.Invoke("UpdateDefaultRedactionText", New Object() {text})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateDefaultRedactionText(ByVal text As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateDefaultRedactionText", New Object() {text}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateDefaultRedactionText(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDefaultRedactionTextAsync(ByVal text As String)
            Me.UpdateDefaultRedactionTextAsync(text, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateDefaultRedactionTextAsync(ByVal text As String, ByVal userState As Object)
            If (Me.UpdateDefaultRedactionTextOperationCompleted Is Nothing) Then
                Me.UpdateDefaultRedactionTextOperationCompleted = AddressOf Me.OnUpdateDefaultRedactionTextOperationCompleted
            End If
            Me.InvokeAsync("UpdateDefaultRedactionText", New Object() {text}, Me.UpdateDefaultRedactionTextOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateDefaultRedactionTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateDefaultRedactionTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateDefaultRedactionTextCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/Logout", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Logout()
            Me.Invoke("Logout", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Function BeginLogout(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Logout", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndLogout(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync()
            Me.LogoutAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogoutAsync(ByVal userState As Object)
            If (Me.LogoutOperationCompleted Is Nothing) Then
                Me.LogoutOperationCompleted = AddressOf Me.OnLogoutOperationCompleted
            End If
            Me.InvokeAsync("Logout", New Object(-1) {}, Me.LogoutOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogoutOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogoutCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogoutCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/ClearCookiesBeforeLogin", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ClearCookiesBeforeLogin()
            Me.Invoke("ClearCookiesBeforeLogin", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Function BeginClearCookiesBeforeLogin(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ClearCookiesBeforeLogin", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndClearCookiesBeforeLogin(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearCookiesBeforeLoginAsync()
            Me.ClearCookiesBeforeLoginAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClearCookiesBeforeLoginAsync(ByVal userState As Object)
            If (Me.ClearCookiesBeforeLoginOperationCompleted Is Nothing) Then
                Me.ClearCookiesBeforeLoginOperationCompleted = AddressOf Me.OnClearCookiesBeforeLoginOperationCompleted
            End If
            Me.InvokeAsync("ClearCookiesBeforeLogin", New Object(-1) {}, Me.ClearCookiesBeforeLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnClearCookiesBeforeLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClearCookiesBeforeLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClearCookiesBeforeLoginCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/LoggedIn", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoggedIn() As Boolean
            Dim results() As Object = Me.Invoke("LoggedIn", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginLoggedIn(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LoggedIn", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLoggedIn(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoggedInAsync()
            Me.LoggedInAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoggedInAsync(ByVal userState As Object)
            If (Me.LoggedInOperationCompleted Is Nothing) Then
                Me.LoggedInOperationCompleted = AddressOf Me.OnLoggedInOperationCompleted
            End If
            Me.InvokeAsync("LoggedIn", New Object(-1) {}, Me.LoggedInOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoggedInOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoggedInCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoggedInCompleted(Me, New LoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/Login", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal emailAddress As String, ByVal password As String) As Boolean
            Dim results() As Object = Me.Invoke("Login", New Object() {emailAddress, password})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginLogin(ByVal emailAddress As String, ByVal password As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Login", New Object() {emailAddress, password}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLogin(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal emailAddress As String, ByVal password As String)
            Me.LoginAsync(emailAddress, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal emailAddress As String, ByVal password As String, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {emailAddress, password}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/LoginWithAuthenticationToken", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginWithAuthenticationToken(ByVal authenticationToken As String) As String
            Dim results() As Object = Me.Invoke("LoginWithAuthenticationToken", New Object() {authenticationToken})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginLoginWithAuthenticationToken(ByVal authenticationToken As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("LoginWithAuthenticationToken", New Object() {authenticationToken}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLoginWithAuthenticationToken(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginWithAuthenticationTokenAsync(ByVal authenticationToken As String)
            Me.LoginWithAuthenticationTokenAsync(authenticationToken, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginWithAuthenticationTokenAsync(ByVal authenticationToken As String, ByVal userState As Object)
            If (Me.LoginWithAuthenticationTokenOperationCompleted Is Nothing) Then
                Me.LoginWithAuthenticationTokenOperationCompleted = AddressOf Me.OnLoginWithAuthenticationTokenOperationCompleted
            End If
            Me.InvokeAsync("LoginWithAuthenticationToken", New Object() {authenticationToken}, Me.LoginWithAuthenticationTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginWithAuthenticationTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginWithAuthenticationTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginWithAuthenticationTokenCompleted(Me, New LoginWithAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GenerateAuthenticationToken", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateAuthenticationToken() As String
            Dim results() As Object = Me.Invoke("GenerateAuthenticationToken", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerateAuthenticationToken(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerateAuthenticationToken", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerateAuthenticationToken(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateAuthenticationTokenAsync()
            Me.GenerateAuthenticationTokenAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateAuthenticationTokenAsync(ByVal userState As Object)
            If (Me.GenerateAuthenticationTokenOperationCompleted Is Nothing) Then
                Me.GenerateAuthenticationTokenOperationCompleted = AddressOf Me.OnGenerateAuthenticationTokenOperationCompleted
            End If
            Me.InvokeAsync("GenerateAuthenticationToken", New Object(-1) {}, Me.GenerateAuthenticationTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateAuthenticationTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateAuthenticationTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateAuthenticationTokenCompleted(Me, New GenerateAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GenerateDistributedAuthenticationToken", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateDistributedAuthenticationToken() As String
            Dim results() As Object = Me.Invoke("GenerateDistributedAuthenticationToken", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGenerateDistributedAuthenticationToken(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GenerateDistributedAuthenticationToken", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGenerateDistributedAuthenticationToken(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateDistributedAuthenticationTokenAsync()
            Me.GenerateDistributedAuthenticationTokenAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateDistributedAuthenticationTokenAsync(ByVal userState As Object)
            If (Me.GenerateDistributedAuthenticationTokenOperationCompleted Is Nothing) Then
                Me.GenerateDistributedAuthenticationTokenOperationCompleted = AddressOf Me.OnGenerateDistributedAuthenticationTokenOperationCompleted
            End If
            Me.InvokeAsync("GenerateDistributedAuthenticationToken", New Object(-1) {}, Me.GenerateDistributedAuthenticationTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateDistributedAuthenticationTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateDistributedAuthenticationTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateDistributedAuthenticationTokenCompleted(Me, New GenerateDistributedAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GetLatestAuthenticationToken", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestAuthenticationToken() As String
            Dim results() As Object = Me.Invoke("GetLatestAuthenticationToken", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLatestAuthenticationToken(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLatestAuthenticationToken", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLatestAuthenticationToken(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestAuthenticationTokenAsync()
            Me.GetLatestAuthenticationTokenAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestAuthenticationTokenAsync(ByVal userState As Object)
            If (Me.GetLatestAuthenticationTokenOperationCompleted Is Nothing) Then
                Me.GetLatestAuthenticationTokenOperationCompleted = AddressOf Me.OnGetLatestAuthenticationTokenOperationCompleted
            End If
            Me.InvokeAsync("GetLatestAuthenticationToken", New Object(-1) {}, Me.GetLatestAuthenticationTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestAuthenticationTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestAuthenticationTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestAuthenticationTokenCompleted(Me, New GetLatestAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/RetrieveAllAssignableInCase", RequestNamespace:="http://www.kCura.com/EDDS/UserManager", ResponseNamespace:="http://www.kCura.com/EDDS/UserManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveAllAssignableInCase(ByVal caseContextArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveAllAssignableInCase", New Object() {caseContextArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveAllAssignableInCase(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveAllAssignableInCase", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveAllAssignableInCase(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllAssignableInCaseAsync(ByVal caseContextArtifactID As Integer)
            Me.RetrieveAllAssignableInCaseAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllAssignableInCaseAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveAllAssignableInCaseOperationCompleted Is Nothing) Then
                Me.RetrieveAllAssignableInCaseOperationCompleted = AddressOf Me.OnRetrieveAllAssignableInCaseOperationCompleted
            End If
            Me.InvokeAsync("RetrieveAllAssignableInCase", New Object() {caseContextArtifactID}, Me.RetrieveAllAssignableInCaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveAllAssignableInCaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveAllAssignableInCaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveAllAssignableInCaseCompleted(Me, New RetrieveAllAssignableInCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateImageViewerDefaultViewModeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateOIXDocumentModeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateSelectedMarkupSetArtifactIDCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateDefaultRedactionTextCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LogoutCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ClearCookiesBeforeLoginCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LoggedInCompletedEventHandler(ByVal sender As Object, ByVal e As LoggedInCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoggedInCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub LoginWithAuthenticationTokenCompletedEventHandler(ByVal sender As Object, ByVal e As LoginWithAuthenticationTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginWithAuthenticationTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenerateAuthenticationTokenCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateAuthenticationTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateAuthenticationTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GenerateDistributedAuthenticationTokenCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateDistributedAuthenticationTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateDistributedAuthenticationTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetLatestAuthenticationTokenCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestAuthenticationTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestAuthenticationTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RetrieveAllAssignableInCaseCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveAllAssignableInCaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveAllAssignableInCaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
