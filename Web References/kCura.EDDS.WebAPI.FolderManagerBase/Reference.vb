'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.1
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
'
Namespace kCura.EDDS.WebAPI.FolderManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FolderManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/FolderManager"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Artifact))>  _
    Partial Public Class FolderManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RetrieveAllByCaseIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveFolderAndDescendantsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExistsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveIntitialChunkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveNextChunkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/EDDSWebAPI/FolderManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RetrieveAllByCaseIDCompleted As RetrieveAllByCaseIDCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveFolderAndDescendantsCompleted As RetrieveFolderAndDescendantsCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadCompleted As ReadCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadIDCompleted As ReadIDCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveCompleted As RetrieveCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCompleted As CreateCompletedEventHandler
        
        '''<remarks/>
        Public Event ExistsCompleted As ExistsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveIntitialChunkCompleted As RetrieveIntitialChunkCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveNextChunkCompleted As RetrieveNextChunkCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/RetrieveAllByCaseID", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveAllByCaseID(ByVal caseContextArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveAllByCaseID", New Object() {caseContextArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveAllByCaseID(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveAllByCaseID", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveAllByCaseID(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllByCaseIDAsync(ByVal caseContextArtifactID As Integer)
            Me.RetrieveAllByCaseIDAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllByCaseIDAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveAllByCaseIDOperationCompleted Is Nothing) Then
                Me.RetrieveAllByCaseIDOperationCompleted = AddressOf Me.OnRetrieveAllByCaseIDOperationCompleted
            End If
            Me.InvokeAsync("RetrieveAllByCaseID", New Object() {caseContextArtifactID}, Me.RetrieveAllByCaseIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveAllByCaseIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveAllByCaseIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveAllByCaseIDCompleted(Me, New RetrieveAllByCaseIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/RetrieveFolderAndDescendants", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveFolderAndDescendants(ByVal caseContextArtifactID As Integer, ByVal folderID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveFolderAndDescendants", New Object() {caseContextArtifactID, folderID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveFolderAndDescendants(ByVal caseContextArtifactID As Integer, ByVal folderID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveFolderAndDescendants", New Object() {caseContextArtifactID, folderID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveFolderAndDescendants(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveFolderAndDescendantsAsync(ByVal caseContextArtifactID As Integer, ByVal folderID As Integer)
            Me.RetrieveFolderAndDescendantsAsync(caseContextArtifactID, folderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveFolderAndDescendantsAsync(ByVal caseContextArtifactID As Integer, ByVal folderID As Integer, ByVal userState As Object)
            If (Me.RetrieveFolderAndDescendantsOperationCompleted Is Nothing) Then
                Me.RetrieveFolderAndDescendantsOperationCompleted = AddressOf Me.OnRetrieveFolderAndDescendantsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveFolderAndDescendants", New Object() {caseContextArtifactID, folderID}, Me.RetrieveFolderAndDescendantsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveFolderAndDescendantsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveFolderAndDescendantsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveFolderAndDescendantsCompleted(Me, New RetrieveFolderAndDescendantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/Read", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Read(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer) As Folder
            Dim results() As Object = Me.Invoke("Read", New Object() {caseContextArtifactID, folderArtifactID})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Function BeginRead(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Read", New Object() {caseContextArtifactID, folderArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRead(ByVal asyncResult As System.IAsyncResult) As Folder
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadAsync(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer)
            Me.ReadAsync(caseContextArtifactID, folderArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadAsync(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer, ByVal userState As Object)
            If (Me.ReadOperationCompleted Is Nothing) Then
                Me.ReadOperationCompleted = AddressOf Me.OnReadOperationCompleted
            End If
            Me.InvokeAsync("Read", New Object() {caseContextArtifactID, folderArtifactID}, Me.ReadOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadCompleted(Me, New ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/ReadID", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadID(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal name As String) As Integer
            Dim results() As Object = Me.Invoke("ReadID", New Object() {caseContextArtifactID, parentArtifactID, name})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginReadID(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal name As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReadID", New Object() {caseContextArtifactID, parentArtifactID, name}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReadID(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadIDAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal name As String)
            Me.ReadIDAsync(caseContextArtifactID, parentArtifactID, name, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadIDAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal name As String, ByVal userState As Object)
            If (Me.ReadIDOperationCompleted Is Nothing) Then
                Me.ReadIDOperationCompleted = AddressOf Me.OnReadIDOperationCompleted
            End If
            Me.InvokeAsync("ReadID", New Object() {caseContextArtifactID, parentArtifactID, name}, Me.ReadIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadIDCompleted(Me, New ReadIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/Retrieve", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Retrieve(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String) As Integer
            Dim results() As Object = Me.Invoke("Retrieve", New Object() {caseContextArtifactID, parentArtifactID, folderName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieve(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Retrieve", New Object() {caseContextArtifactID, parentArtifactID, folderName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieve(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String)
            Me.RetrieveAsync(caseContextArtifactID, parentArtifactID, folderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String, ByVal userState As Object)
            If (Me.RetrieveOperationCompleted Is Nothing) Then
                Me.RetrieveOperationCompleted = AddressOf Me.OnRetrieveOperationCompleted
            End If
            Me.InvokeAsync("Retrieve", New Object() {caseContextArtifactID, parentArtifactID, folderName}, Me.RetrieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveCompleted(Me, New RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/Create", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String) As Integer
            Dim results() As Object = Me.Invoke("Create", New Object() {caseContextArtifactID, parentArtifactID, folderName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCreate(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Create", New Object() {caseContextArtifactID, parentArtifactID, folderName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreate(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String)
            Me.CreateAsync(caseContextArtifactID, parentArtifactID, folderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseContextArtifactID As Integer, ByVal parentArtifactID As Integer, ByVal folderName As String, ByVal userState As Object)
            If (Me.CreateOperationCompleted Is Nothing) Then
                Me.CreateOperationCompleted = AddressOf Me.OnCreateOperationCompleted
            End If
            Me.InvokeAsync("Create", New Object() {caseContextArtifactID, parentArtifactID, folderName}, Me.CreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCompleted(Me, New CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/Exists", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Exists(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("Exists", New Object() {caseContextArtifactID, folderArtifactID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginExists(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Exists", New Object() {caseContextArtifactID, folderArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndExists(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExistsAsync(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer)
            Me.ExistsAsync(caseContextArtifactID, folderArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExistsAsync(ByVal caseContextArtifactID As Integer, ByVal folderArtifactID As Integer, ByVal userState As Object)
            If (Me.ExistsOperationCompleted Is Nothing) Then
                Me.ExistsOperationCompleted = AddressOf Me.OnExistsOperationCompleted
            End If
            Me.InvokeAsync("Exists", New Object() {caseContextArtifactID, folderArtifactID}, Me.ExistsOperationCompleted, userState)
        End Sub
        
        Private Sub OnExistsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExistsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExistsCompleted(Me, New ExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/RetrieveIntitialChunk", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveIntitialChunk(ByVal caseContextArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveIntitialChunk", New Object() {caseContextArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveIntitialChunk(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveIntitialChunk", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveIntitialChunk(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveIntitialChunkAsync(ByVal caseContextArtifactID As Integer)
            Me.RetrieveIntitialChunkAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveIntitialChunkAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveIntitialChunkOperationCompleted Is Nothing) Then
                Me.RetrieveIntitialChunkOperationCompleted = AddressOf Me.OnRetrieveIntitialChunkOperationCompleted
            End If
            Me.InvokeAsync("RetrieveIntitialChunk", New Object() {caseContextArtifactID}, Me.RetrieveIntitialChunkOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveIntitialChunkOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveIntitialChunkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveIntitialChunkCompleted(Me, New RetrieveIntitialChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FolderManager/RetrieveNextChunk", RequestNamespace:="http://www.kCura.com/EDDS/FolderManager", ResponseNamespace:="http://www.kCura.com/EDDS/FolderManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveNextChunk(ByVal caseContextArtifactID As Integer, ByVal lastFolderID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveNextChunk", New Object() {caseContextArtifactID, lastFolderID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveNextChunk(ByVal caseContextArtifactID As Integer, ByVal lastFolderID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveNextChunk", New Object() {caseContextArtifactID, lastFolderID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveNextChunk(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveNextChunkAsync(ByVal caseContextArtifactID As Integer, ByVal lastFolderID As Integer)
            Me.RetrieveNextChunkAsync(caseContextArtifactID, lastFolderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveNextChunkAsync(ByVal caseContextArtifactID As Integer, ByVal lastFolderID As Integer, ByVal userState As Object)
            If (Me.RetrieveNextChunkOperationCompleted Is Nothing) Then
                Me.RetrieveNextChunkOperationCompleted = AddressOf Me.OnRetrieveNextChunkOperationCompleted
            End If
            Me.InvokeAsync("RetrieveNextChunk", New Object() {caseContextArtifactID, lastFolderID}, Me.RetrieveNextChunkOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveNextChunkOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveNextChunkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveNextChunkCompleted(Me, New RetrieveNextChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FolderManager")>  _
    Partial Public Class Folder
        Inherits Artifact
        
        Private nameField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(Folder)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FolderManager")>  _
    Partial Public Class Artifact
        
        Private artifactIDField As Integer
        
        Private artifactTypeIDField As Integer
        
        Private parentArtifactIDField As System.Nullable(Of Integer)
        
        Private containerIDField As System.Nullable(Of Integer)
        
        Private accessControlListIDField As Integer
        
        Private accessControlListIsInheritedField As Boolean
        
        Private keywordsField As String
        
        Private notesField As String
        
        Private textIdentifierField As String
        
        Private lastModifiedOnField As Date
        
        Private lastModifiedByField As Integer
        
        Private createdByField As Integer
        
        Private createdOnField As Date
        
        Private deleteFlagField As Boolean
        
        Private guidField As System.Nullable(Of System.Guid)
        
        '''<remarks/>
        Public Property ArtifactID() As Integer
            Get
                Return Me.artifactIDField
            End Get
            Set
                Me.artifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ArtifactTypeID() As Integer
            Get
                Return Me.artifactTypeIDField
            End Get
            Set
                Me.artifactTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ParentArtifactID() As System.Nullable(Of Integer)
            Get
                Return Me.parentArtifactIDField
            End Get
            Set
                Me.parentArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ContainerID() As System.Nullable(Of Integer)
            Get
                Return Me.containerIDField
            End Get
            Set
                Me.containerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessControlListID() As Integer
            Get
                Return Me.accessControlListIDField
            End Get
            Set
                Me.accessControlListIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccessControlListIsInherited() As Boolean
            Get
                Return Me.accessControlListIsInheritedField
            End Get
            Set
                Me.accessControlListIsInheritedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Keywords() As String
            Get
                Return Me.keywordsField
            End Get
            Set
                Me.keywordsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Notes() As String
            Get
                Return Me.notesField
            End Get
            Set
                Me.notesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TextIdentifier() As String
            Get
                Return Me.textIdentifierField
            End Get
            Set
                Me.textIdentifierField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModifiedOn() As Date
            Get
                Return Me.lastModifiedOnField
            End Get
            Set
                Me.lastModifiedOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModifiedBy() As Integer
            Get
                Return Me.lastModifiedByField
            End Get
            Set
                Me.lastModifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As Integer
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedOn() As Date
            Get
                Return Me.createdOnField
            End Get
            Set
                Me.createdOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeleteFlag() As Boolean
            Get
                Return Me.deleteFlagField
            End Get
            Set
                Me.deleteFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Guid() As System.Nullable(Of System.Guid)
            Get
                Return Me.guidField
            End Get
            Set
                Me.guidField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveAllByCaseIDCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveAllByCaseIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveAllByCaseIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveFolderAndDescendantsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveFolderAndDescendantsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveFolderAndDescendantsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ReadCompletedEventHandler(ByVal sender As Object, ByVal e As ReadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ReadIDCompletedEventHandler(ByVal sender As Object, ByVal e As ReadIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub CreateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub ExistsCompletedEventHandler(ByVal sender As Object, ByVal e As ExistsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExistsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveIntitialChunkCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveIntitialChunkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveIntitialChunkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")>  _
    Public Delegate Sub RetrieveNextChunkCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveNextChunkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveNextChunkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
