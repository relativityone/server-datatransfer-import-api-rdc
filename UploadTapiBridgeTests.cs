using System.Threading;
using NUnit.Framework;
using Relativity.Transfer;
using Relativity.Transfer.UnitTestFramework;

namespace kCura.WinEDDS.TApi.NUnit.Integration
{
	public class UploadTapiBridgeTests : TapiBridgeTests
	{
		private UploadTapiBridge tapiBridge;

		protected override TapiBridge NativeFileTransfer => tapiBridge;
		
		/// <summary>
		/// Tests an upload.
		/// </summary>
		[Test]
		public void ShouldUploadTheFiles()
		{
			this.GivenTheTestInstance(TestEnvironment.OnPremisePrivateCloud);
			this.GivenTheWorkspaceId(true);
			this.GivenTheMaxFilesPerFolder(10);
			this.GivenTheNumberOfFiles(100);
			this.GivenTheAutoGeneratedDataset(this.testDirectory.Directory);
			this.GivenTheTargetPath(this.instance.FileShareUncPath + "/NativeFileUploadTest");
			this.GivenTheNativeFileTransfer(TransferDirection.Upload);
			this.WhenExecutingTheJob();
			this.ThenTheFilesWereTransferred();
		}

		protected override void CreateTapiBridge()
		{
			var parameters = new UploadTapiBridgeParameters
			{
				WebCookieContainer = this.cookieContainer,
				Credentials = this.credential,
				MaxFilesPerFolder = this.maxFilesPerFolder,
				TargetPath = this.targetPath,
				WebServiceUrl = this.relativityHost,
				WorkspaceId = this.workspaceId
			};

			this.tapiBridge = new UploadTapiBridge(parameters, this.transferLog?.Object, CancellationToken.None);
		}

		protected override void WhenExecutingTheJob()
		{
			var order = 0;
			foreach (var sourcePath in this.sourcePaths)
			{
				this.tapiBridge.AddPath(sourcePath, null, order++);
			}

			this.NativeFileTransfer.WaitForTransferJob();
		}
	}
}